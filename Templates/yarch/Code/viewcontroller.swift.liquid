//
//  {{ module_info.description }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright (c) {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit

protocol {{ module_info.name }}DisplayLogic: AnyObject {

    // Отображение полей
    func displayFields(viewModel: {{ module_info.name }}.GetFields.ViewModel)
}

protocol {{ module_info.name }}ViewControllerDelegate: AnyObject {

}

final class {{ module_info.name }}ViewController: UIViewController {

    private let interactor: {{ module_info.name }}BusinessLogic

    private lazy var customView = view as? {{ module_info.name }}View

    init(interactor: {{ module_info.name }}BusinessLogic) {
        self.interactor = interactor
        super.init(nibName: nil, bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    // MARK: View lifecycle
    override func loadView() {
        view = {{ module_info.name }}View(frame: UIScreen.main.bounds, delegate: self)
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        getFields()
    }

    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        setNavigationBarStyle(.light)
    }

    // MARK: Получение полей
    private func getFields() {
        interactor.getFields(request: {{ module_info.name }}.GetFields.Request())
    }
}

extension {{ module_info.name }}ViewController: {{ module_info.name }}DisplayLogic {

    // MARK: Отображение полей
    func displayFields(viewModel: {{ module_info.name }}.GetFields.ViewModel) {
        customView?.configure(with: viewModel.result)
    }
}

extension {{ module_info.name }}ViewController: {{ module_info.name }}ViewControllerDelegate {

}